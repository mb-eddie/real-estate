{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getAllTickets, getTicketDetail, replyTicket, closeTicket, addTicket } from \"./actions\";\nconst PREFIX = \"ticket\";\nconst initialState = {\n  tickets: [],\n  ticketDetail: [],\n  status: false,\n  error: \"\",\n  updateResponse: false\n};\nconst setAllTickets = (state, data) => {\n  state.tickets = (data === null || data === void 0 ? void 0 : data.ticketList) || [];\n};\nconst setTicketDetail = (state, data) => {\n  state.ticketDetail = data === null || data === void 0 ? void 0 : data.tickets;\n};\nconst replyTicketDetail = (state, res) => {\n  if (res.success) {\n    state.status = res.success;\n    state.error = \"\";\n    state.updateResponse = !state.updateResponse;\n    state.ticketDetail.push(res.data);\n  } else {\n    state.status = res.success;\n    state.error = res.error;\n    state.updateResponse = !state.updateResponse;\n  }\n};\nconst addNewTicket = (state, res) => {\n  if (res.success) {\n    const existingListString = localStorage.getItem(\"ticket\");\n    const existingList = existingListString ? JSON.parse(existingListString) : [];\n    existingList.push(res.data.ticketID);\n    const updatedListString = JSON.stringify(existingList);\n    localStorage.setItem(\"ticket\", updatedListString);\n    state.status = res.success;\n    state.error = \"\";\n    state.updateResponse = !state.updateResponse;\n  } else {\n    state.status = res.success;\n    state.error = res.error;\n    state.updateResponse = !state.updateResponse;\n  }\n};\nexport const ticketReducer = createSlice({\n  name: PREFIX,\n  initialState,\n  reducers: {\n    formatTicketStatus: state => {\n      state.status = false;\n      state.error = \"\";\n      state.updateResponse = !state.updateResponse;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getAllTickets.fulfilled.type, (state, action) => {\n      setAllTickets(state, action.payload);\n    });\n    builder.addCase(getTicketDetail.fulfilled.type, (state, action) => {\n      setTicketDetail(state, action.payload);\n    });\n    builder.addCase(replyTicket.fulfilled.type, (state, action) => {\n      replyTicketDetail(state, action.payload);\n    });\n    builder.addCase(addTicket.fulfilled.type, (state, action) => {\n      addNewTicket(state, action.payload);\n    });\n  }\n});\nexport const {\n  formatTicketStatus\n} = ticketReducer.actions;\nexport { getAllTickets, getTicketDetail, replyTicket, closeTicket, addTicket };\nexport default ticketReducer.reducer;","map":{"version":3,"names":["createSlice","getAllTickets","getTicketDetail","replyTicket","closeTicket","addTicket","PREFIX","initialState","tickets","ticketDetail","status","error","updateResponse","setAllTickets","state","data","ticketList","setTicketDetail","replyTicketDetail","res","success","push","addNewTicket","existingListString","localStorage","getItem","existingList","JSON","parse","ticketID","updatedListString","stringify","setItem","ticketReducer","name","reducers","formatTicketStatus","extraReducers","builder","addCase","fulfilled","type","action","payload","actions","reducer"],"sources":["/home/dev/Dev/Web3/take-home-challenge/src/store/tickets/index.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  getAllTickets,\n  getTicketDetail,\n  replyTicket,\n  closeTicket,\n  addTicket,\n} from \"./actions\";\n\nconst PREFIX = \"ticket\";\n\nconst initialState: any = {\n  tickets: [],\n  ticketDetail: [],\n  status: false,\n  error: \"\",\n  updateResponse: false,\n};\n\nconst setAllTickets = (state: any, data: any) => {\n  state.tickets = data?.ticketList || [];\n};\nconst setTicketDetail = (state: any, data: any) => {\n  state.ticketDetail = data?.tickets;\n};\nconst replyTicketDetail = (state: any, res: any) => {\n  if (res.success) {\n    state.status = res.success;\n    state.error = \"\";\n    state.updateResponse = !state.updateResponse;\n    state.ticketDetail.push(res.data);\n  } else {\n    state.status = res.success;\n    state.error = res.error;\n    state.updateResponse = !state.updateResponse;\n  }\n};\nconst addNewTicket = (state: any, res: any) => {\n  if (res.success) {\n    const existingListString = localStorage.getItem(\"ticket\");\n    const existingList = existingListString\n      ? JSON.parse(existingListString)\n      : [];\n    existingList.push(res.data.ticketID);\n    const updatedListString = JSON.stringify(existingList);\n    localStorage.setItem(\"ticket\", updatedListString);\n    state.status = res.success;\n    state.error = \"\";\n    state.updateResponse = !state.updateResponse;\n  } else {\n    state.status = res.success;\n    state.error = res.error;\n    state.updateResponse = !state.updateResponse;\n  }\n};\n\nexport const ticketReducer = createSlice({\n  name: PREFIX,\n  initialState,\n  reducers: {\n    formatTicketStatus: (state: any) => {\n      state.status = false;\n      state.error = \"\";\n      state.updateResponse = !state.updateResponse;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(\n      getAllTickets.fulfilled.type,\n      (state: any, action: PayloadAction<any>) => {\n        setAllTickets(state, action.payload);\n      }\n    );\n    builder.addCase(\n      getTicketDetail.fulfilled.type,\n      (state: any, action: PayloadAction<any>) => {\n        setTicketDetail(state, action.payload);\n      }\n    );\n    builder.addCase(\n      replyTicket.fulfilled.type,\n      (state: any, action: PayloadAction<any>) => {\n        replyTicketDetail(state, action.payload);\n      }\n    );\n    builder.addCase(\n      addTicket.fulfilled.type,\n      (state: any, action: PayloadAction<any>) => {\n        addNewTicket(state, action.payload);\n      }\n    );\n  },\n});\n\nexport const { formatTicketStatus } = ticketReducer.actions;\nexport { getAllTickets, getTicketDetail, replyTicket, closeTicket, addTicket };\nexport default ticketReducer.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}