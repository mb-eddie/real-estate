{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from \"./auth/index\";\nimport blogReducer from \"./blogs/index\";\nimport ticketReducer from \"./tickets/index\";\nimport alertReducer from \"./alert/index\";\nimport chatReducer from \"./chat\";\n// import thunkMiddleware from \"redux-thunk\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    blog: blogReducer,\n    ticket: ticketReducer,\n    alert: alertReducer,\n    chat: chatReducer\n  }\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}","map":{"version":3,"names":["configureStore","authReducer","blogReducer","ticketReducer","alertReducer","chatReducer","store","reducer","auth","blog","ticket","alert","chat"],"sources":["/home/dev/Dev/Web3/take-home-challenge/src/store/store.ts"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport authReducer from \"./auth/index\";\nimport blogReducer from \"./blogs/index\";\nimport ticketReducer from \"./tickets/index\";\nimport alertReducer from \"./alert/index\";\nimport chatReducer from \"./chat\";\n// import thunkMiddleware from \"redux-thunk\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    blog: blogReducer,\n    ticket: ticketReducer,\n    alert: alertReducer,\n    chat: chatReducer\n  }\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,eAAe;AACxC,OAAOC,WAAW,MAAM,QAAQ;AAChC;;AAEA,OAAO,MAAMC,KAAK,GAAGN,cAAc,CAAC;EAClCO,OAAO,EAAE;IACPC,IAAI,EAAEP,WAAW;IACjBQ,IAAI,EAAEP,WAAW;IACjBQ,MAAM,EAAEP,aAAa;IACrBQ,KAAK,EAAEP,YAAY;IACnBQ,IAAI,EAAEP;EACR;AACF,CAAC,CAAC;;AAEF;;AAGA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}