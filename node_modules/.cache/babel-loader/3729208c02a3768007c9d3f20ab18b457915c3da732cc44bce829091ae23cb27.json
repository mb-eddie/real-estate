{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getAllBlogs, getBlog, deleteBlog, addBlog, editBlog, getBlogByID } from \"./actions\";\nconst PREFIX = \"blog\";\nconst initialState = {\n  status: false,\n  blogCount: 0,\n  currentPage: 1,\n  items: [],\n  totalPages: 1,\n  search: \"\",\n  blogdetail: {},\n  error: \"\",\n  updateResponse: false,\n  loading: false\n};\nconst setAllBlogs = (state, data) => {\n  state.blogCount = data.blogCount;\n  state.currentPage = data.currentPage;\n  state.items = data.items;\n  state.totalPages = data.totalPages;\n  state.search = data.search;\n  state.loading = true;\n};\nconst setBlog = (state, res) => {\n  if (res.success) {\n    state.blogdetail = res.data.item;\n  } else {\n    state.blogdetail = {};\n  }\n};\nconst addBlogData = (state, data) => {\n  state.status = data.success;\n  state.error = data.error;\n  state.updateResponse = !state.updateResponse;\n};\nconst editBlogData = (state, data) => {\n  state.status = data.success;\n  state.error = data.error;\n  state.updateResponse = !state.updateResponse;\n};\nconst delBlogData = (state, res) => {\n  if (res.success) {\n    const newItems = state.items.filter(item => item.id !== res.data.id);\n    state.items = newItems;\n  } else {\n    state.status = res.success;\n    state.error = res.error;\n    state.updateResponse = !state.updateResponse;\n  }\n};\nexport const blogReducer = createSlice({\n  name: PREFIX,\n  initialState,\n  reducers: {\n    formatBlogStatus: state => {\n      state.status = false;\n      state.error = \"\";\n      state.updateResponse = !state.updateResponse;\n      state.loading = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getAllBlogs.fulfilled.type, (state, action) => {\n      setAllBlogs(state, action.payload);\n    });\n    builder.addCase(getBlog.fulfilled.type, (state, action) => {\n      setBlog(state, action.payload);\n    });\n    builder.addCase(getBlogByID.fulfilled.type, (state, action) => {\n      setBlog(state, action.payload);\n    });\n    builder.addCase(addBlog.fulfilled.type, (state, action) => {\n      addBlogData(state, action.payload);\n    });\n    builder.addCase(editBlog.fulfilled.type, (state, action) => {\n      editBlogData(state, action.payload);\n    });\n    builder.addCase(deleteBlog.fulfilled.type, (state, action) => {\n      delBlogData(state, action.payload);\n    });\n  }\n});\nexport const {\n  formatBlogStatus\n} = blogReducer.actions;\nexport { getAllBlogs, getBlog, deleteBlog, addBlog, editBlog, getBlogByID };\nexport default blogReducer.reducer;","map":{"version":3,"names":["createSlice","getAllBlogs","getBlog","deleteBlog","addBlog","editBlog","getBlogByID","PREFIX","initialState","status","blogCount","currentPage","items","totalPages","search","blogdetail","error","updateResponse","loading","setAllBlogs","state","data","setBlog","res","success","item","addBlogData","editBlogData","delBlogData","newItems","filter","id","blogReducer","name","reducers","formatBlogStatus","extraReducers","builder","addCase","fulfilled","type","action","payload","actions","reducer"],"sources":["/home/dev/Dev/Web3/take-home-challenge/src/store/blogs/index.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  getAllBlogs,\n  getBlog,\n  deleteBlog,\n  addBlog,\n  editBlog,\n  getBlogByID\n} from \"./actions\";\n\nconst PREFIX = \"blog\";\n\nconst initialState: any = {\n  status: false,\n  blogCount: 0,\n  currentPage: 1,\n  items: [],\n  totalPages: 1,\n  search: \"\",\n  blogdetail: {},\n  error: \"\",\n  updateResponse: false,\n  loading: false\n};\n\nconst setAllBlogs = (state: any, data: any) => {\n  state.blogCount = data.blogCount;\n  state.currentPage = data.currentPage;\n  state.items = data.items;\n  state.totalPages = data.totalPages;\n  state.search = data.search;\n  state.loading = true;\n};\n\nconst setBlog = (state: any, res: any) => {\n  if (res.success) {\n    state.blogdetail = res.data.item;\n  } else {\n    state.blogdetail = {};\n  }\n};\n\nconst addBlogData = (state: any, data: any) => {\n  state.status = data.success;\n  state.error = data.error;\n  state.updateResponse = !state.updateResponse;\n};\n\nconst editBlogData = (state: any, data: any) => {\n  state.status = data.success;\n  state.error = data.error;\n  state.updateResponse = !state.updateResponse;\n};\n\nconst delBlogData = (state: any, res: any) => {\n  if (res.success) {\n    const newItems = state.items.filter((item: any) => item.id !== res.data.id);\n    state.items = newItems;\n  } else {\n    state.status = res.success;\n    state.error = res.error;\n    state.updateResponse = !state.updateResponse;\n  }\n};\n\nexport const blogReducer = createSlice({\n  name: PREFIX,\n  initialState,\n  reducers: {\n    formatBlogStatus: (state: any) => {\n      state.status = false;\n      state.error = \"\";\n      state.updateResponse = !state.updateResponse;\n      state.loading = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(\n      getAllBlogs.fulfilled.type,\n      (state: any, action: PayloadAction<any>) => {\n        setAllBlogs(state, action.payload);\n      }\n    );\n    builder.addCase(\n      getBlog.fulfilled.type,\n      (state: any, action: PayloadAction<any>) => {\n        setBlog(state, action.payload);\n      }\n    );\n    builder.addCase(\n      getBlogByID.fulfilled.type,\n      (state: any, action: PayloadAction<any>) => {\n        setBlog(state, action.payload);\n      }\n    );\n    builder.addCase(\n      addBlog.fulfilled.type,\n      (state: any, action: PayloadAction<any>) => {\n        addBlogData(state, action.payload);\n      }\n    );\n    builder.addCase(\n      editBlog.fulfilled.type,\n      (state: any, action: PayloadAction<any>) => {\n        editBlogData(state, action.payload);\n      }\n    );\n    builder.addCase(\n      deleteBlog.fulfilled.type,\n      (state: any, action: PayloadAction<any>) => {\n        delBlogData(state, action.payload);\n      }\n    );\n  }\n});\n\nexport const { formatBlogStatus } = blogReducer.actions;\nexport { getAllBlogs, getBlog, deleteBlog, addBlog, editBlog, getBlogByID };\nexport default blogReducer.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}