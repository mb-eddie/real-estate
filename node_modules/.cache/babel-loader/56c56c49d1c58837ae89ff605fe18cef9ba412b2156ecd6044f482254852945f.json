{"ast":null,"code":"var _jsxFileName = \"/home/dev/Dev/Web3/take-home-challenge/src/views/login/LoginField.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Typography, Button, Stack } from \"@mui/material\";\nimport CustomTextField from \"../../components/text/TextField\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { setlogin } from \"../../store/auth\";\nimport { selectErrorAuth, selectLoginUser, selectStatusAuth, selectUpdateResponseAuth } from \"../../store/auth/selectors\";\nimport { useNavigate } from \"react-router-dom\";\nimport { showAlert } from \"../../store/alert\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginField = () => {\n  _s();\n  const [username, setName] = useState(\"\");\n  const [usernameErr, setNameErr] = useState(false);\n  const [password, setPwd] = useState(\"\");\n  const [passwordErr, setPwdErr] = useState(false);\n  const loggedinUser = useAppSelector(selectLoginUser);\n  const errorAuth = useAppSelector(selectErrorAuth);\n  const updateResponse = useAppSelector(selectUpdateResponseAuth);\n  const statusAuth = useAppSelector(selectStatusAuth);\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const handleSubmit = () => {\n    let successData = true;\n    if (!username) {\n      successData = false;\n      setNameErr(true);\n    }\n    if (!password) {\n      successData = false;\n      setPwdErr(true);\n    }\n    if (successData) {\n      dispatch(setlogin({\n        username,\n        password\n      }));\n      setNameErr(false);\n      setPwdErr(false);\n    }\n  };\n  useEffect(() => {\n    if (loggedinUser) {\n      navigate(\"/\");\n    }\n    if (!statusAuth && errorAuth !== \"\") {\n      dispatch(showAlert({\n        message: errorAuth,\n        severity: \"error\"\n      }));\n    }\n  }, [loggedinUser, updateResponse]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          fontWeight: 600,\n          component: \"label\",\n          htmlFor: \"username\",\n          mb: \"5px\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextField, {\n          id: \"username\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: username,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          component: \"label\",\n          htmlFor: \"username\",\n          color: \"error\",\n          display: usernameErr ? \"block\" : \"none\",\n          children: \"Please add User Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: \"25px\",\n        sx: {\n          textAlign: \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          fontWeight: 600,\n          component: \"label\",\n          htmlFor: \"password\",\n          mb: \"5px\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextField, {\n          id: \"password\",\n          type: \"password\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: password,\n          onChange: e => setPwd(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          component: \"label\",\n          htmlFor: \"password\",\n          color: \"error\",\n          display: passwordErr ? \"block\" : \"none\",\n          children: \"Please add Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: \"25px\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        size: \"large\",\n        fullWidth: true,\n        onClick: () => handleSubmit(),\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LoginField, \"ZthqlHHPmRtLhzc4tSrbioOGhn0=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector, useAppSelector, useNavigate, useAppDispatch];\n});\n_c = LoginField;\nexport default LoginField;\nvar _c;\n$RefreshReg$(_c, \"LoginField\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","Button","Stack","CustomTextField","useAppDispatch","useAppSelector","setlogin","selectErrorAuth","selectLoginUser","selectStatusAuth","selectUpdateResponseAuth","useNavigate","showAlert","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginField","_s","username","setName","usernameErr","setNameErr","password","setPwd","passwordErr","setPwdErr","loggedinUser","errorAuth","updateResponse","statusAuth","navigate","dispatch","handleSubmit","successData","message","severity","children","sx","textAlign","variant","fontWeight","component","htmlFor","mb","fileName","_jsxFileName","lineNumber","columnNumber","id","fullWidth","value","onChange","e","target","color","display","mt","type","size","onClick","_c","$RefreshReg$"],"sources":["/home/dev/Dev/Web3/take-home-challenge/src/views/login/LoginField.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Box, Typography, Button, Stack } from \"@mui/material\";\nimport api from \"../../utils/api\";\nimport CustomTextField from \"../../components/text/TextField\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { setlogin } from \"../../store/auth\";\nimport {\n  selectErrorAuth,\n  selectLoginUser,\n  selectStatusAuth,\n  selectUpdateResponseAuth,\n} from \"../../store/auth/selectors\";\nimport { useNavigate } from \"react-router-dom\";\nimport { showAlert } from \"../../store/alert\";\n\nconst LoginField = () => {\n  const [username, setName] = useState(\"\");\n  const [usernameErr, setNameErr] = useState(false);\n  const [password, setPwd] = useState(\"\");\n  const [passwordErr, setPwdErr] = useState(false);\n  const loggedinUser = useAppSelector(selectLoginUser);\n  const errorAuth = useAppSelector(selectErrorAuth);\n  const updateResponse = useAppSelector(selectUpdateResponseAuth);\n  const statusAuth = useAppSelector(selectStatusAuth);\n\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  const handleSubmit = () => {\n    let successData = true;\n    if (!username) {\n      successData = false;\n      setNameErr(true);\n    }\n    if (!password) {\n      successData = false;\n      setPwdErr(true);\n    }\n    if (successData) {\n      dispatch(setlogin({ username, password }));\n      setNameErr(false);\n      setPwdErr(false);\n    }\n  };\n\n  useEffect(() => {\n    if (loggedinUser) {\n      navigate(\"/\");\n    }\n    if (!statusAuth && errorAuth !== \"\") {\n      dispatch(showAlert({ message: errorAuth, severity: \"error\" }));\n    }\n  }, [loggedinUser, updateResponse]);\n\n  return (\n    <>\n      <Stack>\n        <Box sx={{ textAlign: \"left\" }}>\n          <Typography\n            variant=\"subtitle1\"\n            fontWeight={600}\n            component=\"label\"\n            htmlFor=\"username\"\n            mb=\"5px\"\n          >\n            Username\n          </Typography>\n          <CustomTextField\n            id=\"username\"\n            variant=\"outlined\"\n            fullWidth\n            value={username}\n            onChange={(e: any) => setName(e.target.value)}\n          />\n          <Typography\n            variant=\"subtitle1\"\n            component=\"label\"\n            htmlFor=\"username\"\n            color=\"error\"\n            display={usernameErr ? \"block\" : \"none\"}\n          >\n            Please add User Name\n          </Typography>\n        </Box>\n        <Box mt=\"25px\" sx={{ textAlign: \"left\" }}>\n          <Typography\n            variant=\"subtitle1\"\n            fontWeight={600}\n            component=\"label\"\n            htmlFor=\"password\"\n            mb=\"5px\"\n          >\n            Password\n          </Typography>\n          <CustomTextField\n            id=\"password\"\n            type=\"password\"\n            variant=\"outlined\"\n            fullWidth\n            value={password}\n            onChange={(e: any) => setPwd(e.target.value)}\n          />\n          <Typography\n            variant=\"subtitle1\"\n            component=\"label\"\n            htmlFor=\"password\"\n            color=\"error\"\n            display={passwordErr ? \"block\" : \"none\"}\n          >\n            Please add Password\n          </Typography>\n        </Box>\n      </Stack>\n      <Box mt=\"25px\">\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          fullWidth\n          onClick={() => handleSubmit()}\n        >\n          Sign In\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default LoginField;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}