{"ast":null,"code":"import axios from \"axios\";\nimport { getCookie } from \"./cookie\";\nimport { BASE_URL } from \"../config/config\";\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\" // Set your desired headers\n  }\n});\nconst axiosFormdataInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    \"Content-Type\": \"multipart/form-data\" // Set your desired headers\n  }\n});\nconst api = {\n  get: async (url, params = {}) => {\n    try {\n      const response = await axiosInstance.get(url, {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n  post: async (url, data = {}) => {\n    try {\n      const response = await axiosInstance.post(url, data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw error.response.data;\n    }\n  },\n  formPost: async (url, data) => {\n    try {\n      const token = getCookie(\"token\");\n      axiosFormdataInstance.defaults.headers.common[\"x-auth-token\"] = token;\n      const response = await axiosFormdataInstance.post(url, data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw error.response.data;\n    }\n  },\n  authPost: async (url, data) => {\n    try {\n      const token = getCookie(\"token\");\n      axiosInstance.defaults.headers.common[\"x-auth-token\"] = token;\n      const response = await axiosInstance.post(url, data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw error.response.data;\n    }\n  }\n  // Add functions for other HTTP methods (PUT, DELETE) as needed\n};\nexport default api;","map":{"version":3,"names":["axios","getCookie","BASE_URL","axiosInstance","create","baseURL","headers","axiosFormdataInstance","api","get","url","params","response","data","error","post","console","log","formPost","token","defaults","common","authPost"],"sources":["/home/dev/Dev/Web3/take-home-challenge/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\nimport { getCookie } from \"./cookie\";\nimport { BASE_URL } from \"../config/config\";\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\" // Set your desired headers\n  }\n});\n\nconst axiosFormdataInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    \"Content-Type\": \"multipart/form-data\" // Set your desired headers\n  }\n});\n\nconst api = {\n  get: async (url, params = {}) => {\n    try {\n      const response = await axiosInstance.get(url, { params });\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n  post: async (url, data = {}) => {\n    try {\n      const response = await axiosInstance.post(url, data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw error.response.data;\n    }\n  },\n  formPost: async (url, data) => {\n    try {\n      const token = getCookie(\"token\");\n      axiosFormdataInstance.defaults.headers.common[\"x-auth-token\"] = token;\n      const response = await axiosFormdataInstance.post(url, data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw error.response.data;\n    }\n  },\n  authPost: async (url, data) => {\n    try {\n      const token = getCookie(\"token\");\n      axiosInstance.defaults.headers.common[\"x-auth-token\"] = token;\n      const response = await axiosInstance.post(url, data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw error.response.data;\n    }\n  }\n  // Add functions for other HTTP methods (PUT, DELETE) as needed\n};\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,MAAMC,aAAa,GAAGH,KAAK,CAACI,MAAM,CAAC;EACjCC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB,CAAC;EACrC;AACF,CAAC,CAAC;AAEF,MAAMC,qBAAqB,GAAGP,KAAK,CAACI,MAAM,CAAC;EACzCC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IACP,cAAc,EAAE,qBAAqB,CAAC;EACxC;AACF,CAAC,CAAC;AAEF,MAAME,GAAG,GAAG;EACVC,GAAG,EAAE,MAAAA,CAAOC,GAAG,EAAEC,MAAM,GAAG,CAAC,CAAC,KAAK;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,aAAa,CAACM,GAAG,CAACC,GAAG,EAAE;QAAEC;MAAO,CAAC,CAAC;MACzD,OAAOC,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAMA,KAAK,CAACF,QAAQ,CAACC,IAAI;IAC3B;EACF,CAAC;EACDE,IAAI,EAAE,MAAAA,CAAOL,GAAG,EAAEG,IAAI,GAAG,CAAC,CAAC,KAAK;IAC9B,IAAI;MACF,MAAMD,QAAQ,GAAG,MAAMT,aAAa,CAACY,IAAI,CAACL,GAAG,EAAEG,IAAI,CAAC;MACpD,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MAClB,MAAMA,KAAK,CAACF,QAAQ,CAACC,IAAI;IAC3B;EACF,CAAC;EACDK,QAAQ,EAAE,MAAAA,CAAOR,GAAG,EAAEG,IAAI,KAAK;IAC7B,IAAI;MACF,MAAMM,KAAK,GAAGlB,SAAS,CAAC,OAAO,CAAC;MAChCM,qBAAqB,CAACa,QAAQ,CAACd,OAAO,CAACe,MAAM,CAAC,cAAc,CAAC,GAAGF,KAAK;MACrE,MAAMP,QAAQ,GAAG,MAAML,qBAAqB,CAACQ,IAAI,CAACL,GAAG,EAAEG,IAAI,CAAC;MAC5D,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MAClB,MAAMA,KAAK,CAACF,QAAQ,CAACC,IAAI;IAC3B;EACF,CAAC;EACDS,QAAQ,EAAE,MAAAA,CAAOZ,GAAG,EAAEG,IAAI,KAAK;IAC7B,IAAI;MACF,MAAMM,KAAK,GAAGlB,SAAS,CAAC,OAAO,CAAC;MAChCE,aAAa,CAACiB,QAAQ,CAACd,OAAO,CAACe,MAAM,CAAC,cAAc,CAAC,GAAGF,KAAK;MAC7D,MAAMP,QAAQ,GAAG,MAAMT,aAAa,CAACY,IAAI,CAACL,GAAG,EAAEG,IAAI,CAAC;MACpD,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MAClB,MAAMA,KAAK,CAACF,QAAQ,CAACC,IAAI;IAC3B;EACF;EACA;AACF,CAAC;AAED,eAAeL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}